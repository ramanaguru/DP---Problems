Max Sum Without Adjacent Elements

Problem Description

Given a 2 x N grid of integer, A, choose numbers such that the sum of the numbers is maximum and no two chosen numbers are 
adjacent horizontally, vertically or diagonally, and return it.

Note: You can choose more than 2 numbers.

Example Input

Input 1:

 A = [   
        [1]
        [2]    
     ]
Input 2:

 A = [   
        [1, 2, 3, 4]
        [2, 3, 4, 5]    
     ]


Example Output

Output 1:

 2
Output 2:

 8
 
 
 //Code
 
 public class Solution {
    public int adjacent(int[][] A) {
        int n = A[0].length;

        if(n == 1){
            return Math.max(A[0][0], A[1][0]);
        }

        int res[] = new int[n];

        for(int i = 0; i < n ; i++){
            res[i] = Math.max(A[0][i], A[1][i]); //input 2-->  dp = {2,3,4,5}
        }
        
        int dp[] = new int[n];
        dp[0] = res[0];
        dp[1] = Math.max(res[0],res[1]);

        for(int i = 2 ; i < n; i++){
            dp[i] = Math.max(dp[i-1], res[i]+ Math.max(0,dp[i-2]));//dp[3] = max(6, 5+(0,3)) --> max(6,8) = 8; 
        }

        return dp[n-1];


        
    }
}
