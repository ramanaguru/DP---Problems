Fibonacci Numbers using (DP)


//Problem :

Given a positive integer A, write a program to find the Ath Fibonacci number.

In a Fibonacci series, each term is the sum of the previous two terms and the first two terms of the series are 0 and 1. i.e. f(0) = 0 and f(1) = 1.
Hence, f(2) = 1, f(3) = 2, f(4) = 3 and so on.


Example Input
Input 1:

 A = 4
Input 2:

 A = 6


Example Output
Output 1:

 3
Output 2:

 8
 
 
 //code
 
 
 public class Main {
    public static void main(String[] args) {
        
        Scanner scn = new Scanner(System.in);
        int A = scn.nextInt();

        int dp[] = new int [A + 1];

        Arrays.fill(dp, -1);

        dp[0] = 0;
        dp[1] = 1;

        for(int i = 2; i <= A ; i++){
            dp[i] = dp[i - 1] + dp[i - 2];
        }

        System.out.println(dp[A]);
        
        
    }
}
