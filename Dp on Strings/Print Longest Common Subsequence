Problem Statement: 

Print Longest Common Subsequence

//This code will not work in the given link

//Problrm link : https://www.codingninjas.com/codestudio/problems/longest-common-subsequence_624879


//This qn is built on my own what if they need to print all the Longest Common Subsequences




//Tabulation method same code for LCS count

import java.util.*;
public class Solution {

	public static int lcs(String s, String t) {
	    int n = s.length();
		int m = t.length();

		int dp[][] = new int[n+1][m+1];

		for(int row[]: dp){
			Arrays.fill(row, -1);
		}

		for(int i = 0; i <= n ; i++){
		     dp[i][0] = 0;
		}
		for(int j = 0; j <= m; j++){
			dp[0][j] = 0;
		}

		for(int i = 1; i <= n; i++){
			for(int j =1; j <= m; j++){
				if(s.charAt(i-1) == t.charAt(j-1)){
                   dp[i][j]= 1 + dp[i-1][j-1];
				}
				else{
					dp[i][j] = 0 +Math.max(dp[i-1][j] , dp[i][j-1]);
				}
			}
		}

		int len = dp[n][m];
		int i = n;
		int j = m;

		

		int index = len-1;
        String str="";

        for(int k=1; k<=len;k++){
           str +="$"; // dummy string
        }
		
        StringBuilder ss= new StringBuilder(s1);
        StringBuilder str2=new StringBuilder(str);
        while(i>0 && j>0){
            if(ss.charAt(i-1) == s2.charAt(j-1)){
                str2.setCharAt(index,ss.charAt(i-1) ); 
                index--;
                i--;
                j--;
            }
            else if(ss.charAt(i-1)>s2.charAt(j-1)){
                i--;
            }

            else j--;
        }

        System.out.println(str2);
    }

}
